const express = require("express");
const router = express.Router();
const Job = require("../models/jobModel");

router.get("/", async (req, res, next) => {
  try {
    const {
      keyword,
      category,
      location,
      source,
      page = 1,
      limit = 10,
    } = req.query;
    const q = {};
    if (keyword) q.$text = { $search: String(keyword) };
    if (category) q.category = category;
    if (location) q.location = location;
    if (source) q.source = source;

    const skip = (Number(page) - 1) * Number(limit);
    const [items, total] = await Promise.all([
      Job.find(q).sort({ publishDate: -1 }).skip(skip).limit(Number(limit)),
      Job.countDocuments(q),
    ]);

    res.json({ items, page: Number(page), limit: Number(limit), total });
  } catch (e) {
    next(e);
  }
});
  } catch (error) {
    res.status(400).json({
      success: false,
      message: error.message,
    });
  }
});

// GET /api/jobs/:id - Get a single job
router.get("/:id", async (req, res) => {
  try {
    const job = await Job.findById(req.params.id);

    if (!job) {
      return res.status(404).json({
        success: false,
        message: "Job not found",
      });
    }

    res.json({
      success: true,
      data: job,
    });
  } catch (error) {
    res.status(400).json({
      success: false,
      message: error.message,
    });
  }
});

// PUT /api/jobs/:id - Update a job
router.put("/:id", async (req, res) => {
  try {
    const job = await Job.findByIdAndUpdate(req.params.id, req.body, {
      new: true,
      runValidators: true,
    });

    if (!job) {
      return res.status(404).json({
        success: false,
        message: "Job not found",
      });
    }

    res.json({
      success: true,
      data: job,
    });
  } catch (error) {
    res.status(400).json({
      success: false,
      message: error.message,
    });
  }
});

// DELETE /api/jobs/:id - Delete a job
router.delete("/:id", async (req, res) => {
  try {
    const job = await Job.findByIdAndDelete(req.params.id);

    if (!job) {
      return res.status(404).json({
        success: false,
        message: "Job not found",
      });
    }

    res.json({
      success: true,
      data: {},
    });
  } catch (error) {
    res.status(400).json({
      success: false,
      message: error.message,
    });
  }
});

module.exports = router;
